#!/usr/bin/env bash
###############################################################
# LVM : Inspect|Create|Delete : DEVICE : VGs : LVs
# - Create an LVM-based data store for NFS (or any other use)
# - Idempotent
###############################################################
dev="${2:-/dev/sdb}"
vg="${3:-data}"
lv="${4:-nfs1}"
mount="${5:-/srv/nfs/k8s}" # Export if NFS

[[ $(whoami) == root ]] && unset su || su=$su

[[ "${1,,}" == 'inspect' ]] || [[ $5 ]] || echo "
    USAGE : ${BASH_SOURCE##*/} {create,delete} DEVICE VG LV MOUNT || inspect [ DEVICE [VG] ] 
"

inspect(){
    [[ $1 ]] && {
        # Verbose, per : DEVICE [VG]
        $su pvdisplay $dev
        $su vgdisplay $vg
        $su lvm lvdisplay --maps $vg
        #$su lvm fullreport
        return
    }

    # Physical Volumes  (PVs)
    $su pvs

    # Volume Groups     (VGs)
    $su vgs

    # Logical Volumes   (LVs)
    $su lvs -a -o +devices

    # LVs per device
    lsblk;echo;$su lvscan
}

create(){
    # Create the Physical Volume  (PV)
    $su pvs $dev ||
        $su pvcreate $dev

    # Create the Volume Group     (VG)
    $su vgs $vg ||
        $su vgcreate $vg /dev/sdb

    # Create a Logical Volume     (LV)
    $su lvs $vg ||
        $su lvcreate -n $lv -l "100%FREE" $vg
        #... keywork "100%FREE" uses all remaining unallocated extents of VG

    # Create FS : Format as XFS
    $su blkid /dev/$vg/$lv |grep xfs ||
        $su mkfs.xfs /dev/$vg/$lv

    # Create mount point and mount ephemerally
    $su mkdir -p $mount &&
        $su mount /dev/$vg/$lv $mount

    # Persist
    # 1. Get UUID
    blkid="$($su blkid /dev/$vg/$lv |cut -d' ' -f2 |cut -d'=' -f2 |sed 's/"//g')"
    # 2. Append to /etc/fstab (once)
	cat /etc/fstab |grep $blkid || cat <<-EOH |$su tee -a /etc/fstab
	UUID=$blkid $mount xfs defaults 0 0
	EOH
    # 3. Apply changes to systemd srv-nfs-k8s.mount, 
    #    which is dynamically generated by systemd-fstab-generator
    $su systemctl daemon-reload &&
        systemctl cat srv-nfs-k8s.mount
    # 4. Mount and initialize
    $su mount -a &&
        $su chown -R nfsanon:ad-linux-users $mount
}

delete(){
    echo '⚠️⚠️⚠️  This will now DESTROY ALL DATA and LVM objects of "'$dev'" including "'/dev/$vg/$lv'"  ⚠️⚠️⚠️'
    echo 
    read -p "⚠️⚠️⚠️  Okay? [y/N] " n
    [[ ${n,,} != 'y' ]] && return 0
    clear

    # Unmount (if mounted)
    $su umount /dev/$vg/$lv 2>/dev/null || true

    # Remove the LV
    $su lvremove -y /dev/$vg/$lv

    # Remove the VG
    $su vgremove -y $vg

    # Remove the PV
    $su pvremove $dev

    # Wipe the disk signature (Optional) 
    $su wipefs -a $dev
    # Extra thoroughly (overwrite with 0s)
    $su dd if=/dev/zero of=$dev bs=1M count=10
    # If partitioned, may also wipe GPT/MBR headers
    $su sgdisk --zap-all $dev
}

"$@" || echo ERR $?
